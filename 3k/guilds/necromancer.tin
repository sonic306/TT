#class {necromancer} {open}

#read .tt/3k/gear.tin;
#read .tt/3k/TierTracker.tin;

#var guild necromancer
#var mask 0
#var solo 1
#var coffinmax 29
#var followermax 25
#var smugglemax 20
#var currentsmuggle 0
#var canPsi 1
#var canCorrode 1

/* HP Bar */
#act {{HSN\[(\d+)\|(\d+)(?:\((\d+)\)|)\|(\d+)\|(\d+)\|((\d+)\%|\w+\!?)\]\s\w+\[(\d+)\%\/(\d+)c\/(\d+)c\]\s\w+\[(\d+)\|(\d+)(?:\/(\d+)\%|)\]}} {
	#var {my[hpbar][hp]}				{%2};
	#var {my[hpbar][sp]}				{%3};
	#var {my[hpbar][spfuse]}			{%4};
	#var {my[hpbar][np]}				{%5};
	#var {my[hpbar][inv_corpses]}		{%6};
	#var {my[hpbar][ehealth]}			{%7};
	#var {my[hpbar][followerhp]}		{%9};
	#var {my[hpbar][follower_corpses]}	{%10};
	#var {my[hpbar][coffin_corpses]}	{%11};
	#var {my[hpbar][teleports]}  	    {%12};
	#var {my[hpbar][glamores]}	  		{%13};
	#var {my[hpbar][glamores_burn]}	  	{%14};
	
	
	
}

#act {{\w+\[.{3}(\d+)\s.{3}(\d+)\s.{3}(\d+)\s.{3}(\d+)\s.{3}(\d+)\]\s+\w+\[w(\d+\%)\|p(\w+)\|v(\w+)\|r(\d+)\%]}} {
	#var {my[hpbar][powers][dream]} 	  {%2};
	#var {my[hpbar][powers][psibleed]} 	  {%3};
	#var {my[hpbar][powers][corrode]} 	  {%4};
	#var {my[hpbar][powers][light]} 	  {%5};
	#var {my[hpbar][powers][protection]}  {%6};
	#var {my[hpbar][worth]}               {%7};
	#var {my[hpbar][protection_status]}   {%8};
	#var {my[hpbar][veil_status]}         {%9};
	#var {my[hpbar][power_reset]}         {%10};}

	#if {$my[hpbar][worth] < 125} {
		con 100
	};
	#if {$my[hpbar][sp] < 200 && $my[hpbar][powers][dream] != 0} {dream 6};
	#if {"$my[hpbar][protection_status]"  == "OFF" && $my[hpbar][powers][protection] != 0} {
		prot
	};
	
	#if {$my[hpbar][powers][dream] < 15 } {
		#if {$bot == 1} {
			killbot;
		}
	};
	#if {$my[hpbar][powers][corrode] == 0 && $canCorrode == 1} {
		#var canCorrode 0;
	};
	#if {$my[hpbar][powers][corrode] > 0 && $canCorrode == 0} {
		#var canCorrode 1;
	};
	#if {$my[hpbar][powers][psibleed] == 0 && $canPsi == 1} {
		#var canPsi 0;
	};
	#if {$my[hpbar][powers][psibleed] > 0 && $canPsi == 0} {
		#var canPsi 1;
	};
}

#alias {update_status} {
	#if {"$cooler" == "on" || $corpses[cooler] > 0} {
		#format {sb1_cooler} {%+2s} {$corpses[cooler]};
		#var {sb1_cooler} { CL:<130>$sb1_cooler<088>}
	} {
		#var {sb1_cooler} {}
	};
	#if {"$freezer" == "on" || $corpses[freezer] > 0} {
		#format {sb2_freezer} {%+2s} {$corpses[freezer]};
		#var {sb2_freezer} { FZ:<130>$sb2_freezer<088>}
	} {
		#var {sb2_freezer} {}
	};
	#var {my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var {my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var {my[gp1][graph]}		{@graph{$my[gp1][current];$my[gp1][max]}};
	#var {enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%+4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%+4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_inf}		{%+3s} {<168>$my[sp][fuse][current]<088>};
	#format {sp_max}		{%+4s} {<128>$my[sp][max]<088>};
	#format {np}			{%+5s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {np_max}		{%+5s} {<128>$my[gp1][max]<088>};
	#format {ehealth}		{%+8s} {@colscale{$enemy[hp];100}\%};
	#format {corpses[inventory]}	{%+2s} {$corpses[inventory]};
	#format {corpses[coffin]}	{%+2s} {$corpses[coffin]};
	#format {corpses[freezer]}	{%+2s} {$corpses[freezer]};
	#showme {<088>HP:$hp/$hp_max SP:$sp($sp_inf)/$sp_max NP:$np/$np_max  E:$ehealth    IC:<138>${corpses[inventory]}<088>${sb1_cooler}} {-4};
	#showme {H:$my[hp][graph] SP:$my[sp][graph]     NP:$my[gp1][graph]   E:$enemy[graph] CF:<138>$my[hpbar][coffin_corpses]<088>${sb2_freezer}} {-3};
	#showme {$mip[gline][1]  $mip[gline][2]} {-6}
}

#alias {corpsetrig} {
	#if {$solo} {
		corpseme;		
		#var idle 0
	} 
	{
		look;
		#var idle 0
	}
}

#act {Stormer dealt the killing blow} {#if {$mask} { #delay {2} {corpsetrig}} {corpsetrig}}

#act {{The psibleed upon (.*) has dissipated}} {
	#if {$canPsi == 1} {
		psibleed
	}	
}

#act {{A field of superheated steam seeps into the room at your command}} {
	#if {$canCorrode == 1} {
		corrode;
	};
	#if {$canPsi == 1} {
		psibleed;
	};	
	call
}


#act {{^Coffin\s+\[\s+\d+\/\s+(\d+)\|.*}} {
	#var {coffinmax} {%2}
}

/* Preserve all */
#var preserving 0

#alias {mpp} {
	#var preserving 1;
	#var preserve_np 0;
	#var preserve_done 0;
	qtrance preserve remains>20
}

#act {You only have %d/%d necromantic points for that.} {
	#if {$preserving} {
		#var preserve_np 1
	}
}
#act {That corpse is already preserved master.} {
	#if {$preserving} {
		#var preserve_done 1
	}
}
#act {There is no corpse in this room master.} {
	#if {$preserving} {
		#var preserve_done 1
	}
}
#act {You recover your senses} {
	#if {$preserving} {
		#if {$preserve_np} {
			absorb;
			mpp
		}; #elseif {$preserve_done} {
			#var preserving 0
		}; #else {
			mpp
		}
	}
}

#act {{^=M= (.*) attacking you!.$}} {
	#var {my[room][contents][npc]} {%2}
}

#act {{^You attack (.*).$}} {
	#var {my[room][contents][npc]} {%2}
}

#act {Receiving room} {mapgo tp}

#alias corpseme {
	#if {$my[hpbar][coffin_corpses] < $coffinmax && $mask} {
		qtrance preserve remains/wrap>2;get gold;cga
	}
	{
		#if {$my[hpbar][coffin_corpses] < $coffinmax} {
			qtrance preserve remains/wrap;get gold;cga
		}
	};
	#if {$my[hpbar][follower_corpses] < $followermax && $my[hpbar][coffin_corpses] == $coffinmax && $mask} {
		qtrance preserve remains/=get corpse>2;get gold;cga
	}
	{
		#if {$my[hpbar][follower_corpses] < $followermax && $my[hpbar][coffin_corpses] == $coffinmax} {
			qtrance preserve remains/=get corpse;get gold;cga
		}
	};
	#if {$my[hpbar][coffin_corpses] == $coffinmax && $my[hpbar][follower_corpses] == $followermax && $mask && $currentsmuggle < $smugglemax} {
		qtrance preserve remains/smuggle corpse>2;get gold;cga
	}
	{
		#if {$my[hpbar][coffin_corpses] == $coffinmax && $my[hpbar][follower_corpses] == $followermax && $currentsmuggle < $smugglemax} {
			qtrance preserve remains/smuggle corpse;get gold;cga
		}
	};
	#if {$my[hpbar][coffin_corpses] == $coffinmax && $my[hpbar][follower_corpses] == $followermax && $currentsmuggle == $smugglemax && $mask} {
		qtrance preserve remains/get corpse>2;get gold;cga
	}
	{
		#if {$my[hpbar][coffin_corpses] == $coffinmax && $my[hpbar][follower_corpses] == $followermax && $currentsmuggle == $smugglemax} {
			qtrance preserve remains/get corpse;get gold;cga
		}		
	}
}

#alias dca {
	n;
	retrieve;
	open chest;
	get all from chest;
	s;
	donate all;
	close chest;
	deliver
}

#act {{You are currently smuggling (\d+)/20 items}} {
	#var currentsmuggle %2
}

#alias pyre {
	qtrance unwrap biggest/funeral pyre>2
}

#class {necromancer} {close}
